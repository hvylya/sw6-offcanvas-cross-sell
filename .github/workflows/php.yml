name: Shopware Plugin CI

on:
  push:
    branches:
      - main
    paths:
      - '**/*.php'
      - .github/workflows/php.yml
  pull_request:
    branches:
      - main
    paths:
      - '**/*.php'
      - .github/workflows/php.yml

jobs:
  codestyle:
    name: Codestyle (PHP-CS-Fixer)
    runs-on: ubuntu-latest
    steps:
      - uses: shopware/github-actions/cs-fixer@main

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    needs: codestyle
    steps:
      - uses: shopware/github-actions/setup-extension@main
        with:
          extensionName: "${{ github.event.repository.name }}"
          shopwareVersion: "6.7.1.0"
          install: true
          extraRepositories: |
            {
              "${{ github.event.repository.name }}": {
                "type": "path",
                "url": "custom/plugins/${{ github.event.repository.name }}",
                "symlink": true
              }
            }
      - name: Install plugin dependencies
        run: composer -d custom/plugins/${{ github.event.repository.name }} install --no-interaction --prefer-dist --no-progress

      - name: Create phpstan.neon
        working-directory: "custom/plugins/${{ github.event.repository.name }}"
        run: |
          printf "parameters:\n  tmpDir: ${GITHUB_WORKSPACE}/var/phpstan\nincludes:\n  - phpstan.neon.dist" > phpstan.neon

      - name: PHPStan cache
        uses: actions/cache@v4
        with:
          path: "${{ github.workspace }}/var/phpstan"
          key: "${{ runner.OS }}-${{ github.repository }}-phpstan-${{ github.sha }}"
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-phpstan-

      - name: Build PHPStan Bootstrap
        run: php ${GITHUB_WORKSPACE}/src/Core/DevOps/StaticAnalyze/phpstan-bootstrap.php

      - name: Run PHPStan
        run: |
          composer -d custom/plugins/${{ github.event.repository.name }} dump-autoload --dev
          composer -d custom/plugins/${{ github.event.repository.name }} run phpstan

  phpunit_unit:
    name: PHPUnit (unit) ${{ matrix.shopware-version }}
    runs-on: ubuntu-latest
    needs: phpstan
    strategy:
      fail-fast: false
      matrix:
        shopware-version: [6.7.1.0]
    steps:
      - uses: shopware/github-actions/setup-extension@main
        with:
          extensionName: "${{ github.event.repository.name }}"
          shopwareVersion: "${{ matrix.shopware-version }}"
          install: true
          extraRepositories: |
            {
              "${{ github.event.repository.name }}": {
                "type": "path",
                "url": "custom/plugins/${{ github.event.repository.name }}",
                "symlink": true
              }
            }
      - name: Run unit tests
        run: php vendor/bin/phpunit -c custom/plugins/${{ github.event.repository.name }}/phpunit.unit.xml.dist

  phpunit_integration:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: PHPUnit (integration) ${{ matrix.shopware-version }}
    runs-on: ubuntu-latest
    needs: phpstan
    strategy:
      fail-fast: false
      matrix:
        shopware-version: [6.7.1.0]
    steps:
      - uses: shopware/github-actions/setup-extension@main
        with:
          extensionName: "${{ github.event.repository.name }}"
          shopwareVersion: "${{ matrix.shopware-version }}"
          install: true
          extraRepositories: |
            {
              "${{ github.event.repository.name }}": {
                "type": "path",
                "url": "custom/plugins/${{ github.event.repository.name }}",
                "symlink": true
              }
            }
      - name: Run integration tests
        run: php vendor/bin/phpunit -c custom/plugins/${{ github.event.repository.name }}/phpunit.integration.xml.dist
